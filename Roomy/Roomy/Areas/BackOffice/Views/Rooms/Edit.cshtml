@model Roomy.Models.Room

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Room</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<hr />

<div class="row">
    @foreach (var file in Model.Files)
    {
        <div class="col-md-3">
            <img class="img-thumbnail" title="@file.Name" src="data:@file.ContentType;base64, @Convert.ToBase64String(file.Content)" />
            <p>@file.Name <a href="@Url.Action("DeleteFile", "Rooms", new { id = file.ID })" class="btn btn-danger"><i class="fa fa-remove"></i></a></p>
            @*<form id="formAddFile" action="@Url.Action("DeleteFile", "Rooms", new { id = file.ID })" method="POST">
                <button type="submit" class="btn btn-danger">Supprimer</button>
            </form>*@
        </div>
    }
</div>


<form id="addFile" action="@Url.Action("AddFile", "Rooms")" method="post" enctype="multipart/form-data">
    @Html.HiddenFor(x => x.ID)
    <div class="form-group">
        <label>Fichier</label>
        <input id="upload" type="file" value="" name="upload" class="form-control" />
    </div>
    <button type="submit" class="btn btn-warning">Ajouter</button>
</form>

<hr />

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section SectionScripts{
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script>
        tinymce.init({ selector: '#Description' })
    </script>

    @*<script>
            $(document).ready(function() {
                $("#addFile").submit(function (ev) {
                    ev.preventDefault();
                    if ($("#upload").get(0).files.length === 0) {
                        window.alert("Aucun fichier de sélectionné");
                    }
                    @*else {
                        var url = "/backoffice/rooms/addfiles?id=" + @Model.ID + "&upload=" + ;
                        window.location.href = url;
                    }

                })
            });
        </script>*@

    @*<script>
            $(document).ready(function () {
                $("#deleteFile").on("click", function (ev) {
                    $.ajax({
                        url: "http://http://localhost:54606/BackOffice/Rooms/Edit/DeleteFile" + id,
                        method: 'Delete',
                        success: function () {
                            window.location.href = "http://http://localhost:54606/BackOffice/Rooms/Edit/1.html";
                            alert("Photo supprimée");
                        }
                    });
                    ev.preventDefault();
                });
            });
        </script>*@

}
